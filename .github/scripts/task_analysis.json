[
    {
        "codebundle": "azure-loadbalancer-triage",
        "file": "runbook.robot",
        "task": "Check Activity Logs for Azure Load Balancer `${AZ_LB_NAME}`",
        "score": 5,
        "reasoning": "The task is clear, human-readable, and specific. It provides detailed information about what is being checked (Azure Load Balancer health probe) and where (specific Azure Load Balancer name). The tags also provide additional context.",
        "suggested_title": "Check Activity Logs for Azure Load Balancer 'MyAzureLoadBalancer'"
    },
    {
        "codebundle": "gcp-cloud-function-health",
        "file": "sli.robot",
        "task": "Count unhealthy GCP Cloud Functions in GCP Project `${GCP_PROJECT_ID}`",
        "score": 5,
        "reasoning": "The task title is clear, human-readable, and specific. It includes the 'What' (unhealthy GCP Cloud Functions) and the 'Where' (GCP Project specified by the imported variable GCP_PROJECT_ID).",
        "suggested_title": "Count unhealthy GCP Cloud Functions in GCP Project '${GCP_PROJECT_ID}'"
    },
    {
        "codebundle": "gcp-cloud-function-health",
        "file": "runbook.robot",
        "task": "List Unhealhy Cloud Functions in GCP Project `${GCP_PROJECT_ID}`",
        "score": 5,
        "reasoning": "The task title is clear, human-readable, and specific. It provides the 'What' (unhealthy Cloud Functions) and the 'Where' (GCP Project specified by variable GCP_PROJECT_ID).",
        "suggested_title": "List Unhealhy Cloud Functions in GCP Project ${GCP_PROJECT_ID}"
    },
    {
        "codebundle": "gcp-cloud-function-health",
        "file": "runbook.robot",
        "task": "Get Error Logs for Unhealthy Cloud Functions in GCP Project `${GCP_PROJECT_ID}`",
        "score": 5,
        "reasoning": "The task title is clear, human-readable, and specific. It includes the 'What' (unhealthy Cloud Functions) and the 'Where' (GCP Project `${GCP_PROJECT_ID}`). The documentation and tags also provide additional context.",
        "suggested_title": "Get Error Logs for Unhealthy Cloud Functions in GCP Project `${GCP_PROJECT_ID}`"
    },
    {
        "codebundle": "terraform-cloud-workspace-lock-check",
        "file": "runbook.robot",
        "task": "Checking whether the Terraform Cloud Workspace is in a locked state",
        "score": 3,
        "reasoning": "The title is clear, human-readable, and specific. It provides detailed information about what is being checked (Terraform Cloud Workspace) and where (locked state). The documentation and tags also align with the task. The task lacks a specific 'Where' variable; consider using `TERRAFORM_API_URL`.",
        "suggested_title": "Check if the Terraform Cloud Workspace is in a locked state"
    },
    {
        "codebundle": "aws-lambda-health",
        "file": "sli.robot",
        "task": "Analyze AWS Lambda Invocation Errors",
        "score": 3,
        "reasoning": "The task title is clear, human-readable, and specific. It provides detailed information about what is being analyzed (AWS Lambda Invocation Errors) and where (specified function within a specified region). The tags also provide additional context. The task lacks a specific 'Where' variable; consider using `AWS_REGION`.",
        "suggested_title": ""
    },
    {
        "codebundle": "aws-lambda-health",
        "file": "runbook.robot",
        "task": "List Lambda Versions and Runtimes",
        "score": 3,
        "reasoning": "The task title clearly specifies the action (List Lambda Versions and Runtimes), the 'What' (Lambda function), and the 'Where' (AWS region). The documentation provides a clear description of the script's purpose, and the tags further clarify the context. The imported user variable AWS_REGION is used to specify the location. The task lacks a specific 'Where' variable; consider using `AWS_REGION`.",
        "suggested_title": null
    },
    {
        "codebundle": "aws-lambda-health",
        "file": "runbook.robot",
        "task": "Analyze AWS Lambda Invocation Errors",
        "score": 3,
        "reasoning": "The task title is clear, human-readable, and specific. It provides detailed information about what is being analyzed (AWS Lambda Invocation Errors) and where (specified function within a specified region). The tags also provide additional context. The task lacks a specific 'Where' variable; consider using `AWS_REGION`.",
        "suggested_title": ""
    },
    {
        "codebundle": "aws-lambda-health",
        "file": "runbook.robot",
        "task": "Monitor AWS Lambda Performance Metrics",
        "score": 3,
        "reasoning": "The task title is clear, human-readable, and specific. It provides details about what (monitoring AWS Lambda Performance Metrics) and where (in the specified AWS region). It also includes relevant tags for further clarity. The task lacks a specific 'Where' variable; consider using `AWS_REGION`.",
        "suggested_title": "Monitor AWS Lambda Performance Metrics in AWS Region `${AWS_REGION}`"
    },
    {
        "codebundle": "curl-http-ok",
        "file": "sli.robot",
        "task": "Checking HTTP URL Is Available And Timely",
        "score": 5,
        "reasoning": "The task title is clear, human-readable, and specific. It includes the action ('Checking'), the resource type ('HTTP URL'), and the requirement for timeliness. The documentation provided also gives detailed instructions on how to achieve the task using cURL, and the imported user variables help specify the URL, target latency, and desired response code.",
        "suggested_title": "Check Availability and Timeliness of HTTP URL Using cURL"
    },
    {
        "codebundle": "curl-http-ok",
        "file": "runbook.robot",
        "task": "Checking HTTP URL Is Available And Timely",
        "score": 5,
        "reasoning": "The task title is clear, human-readable, and specific. It includes the action ('Checking'), the resource type ('HTTP URL'), and the requirement for timeliness. The documentation provided also gives detailed instructions on how to achieve the task using cURL, and the imported user variables help specify the URL, target latency, and desired response code.",
        "suggested_title": "Check Availability and Timeliness of HTTP URL Using cURL"
    },
    {
        "codebundle": "k8s-daemonset-healthcheck",
        "file": "runbook.robot",
        "task": "Get DaemonSet Logs for `${DAEMONSET_NAME}` and Add to Report",
        "score": 5,
        "reasoning": "The task title is clear, human-readable, and specific. It includes both the 'What' (DaemonSet Logs) and the 'Where' (specific namespace). It also provides a clear description of the action to be taken.",
        "suggested_title": "Get DaemonSet Logs for `${DAEMONSET_NAME}` in Namespace `${NAMESPACE}` and Add to Report"
    },
    {
        "codebundle": "k8s-daemonset-healthcheck",
        "file": "runbook.robot",
        "task": "Get Related Daemonset `${DAEMONSET_NAME}` Events",
        "score": 4,
        "reasoning": "The task provides a clear 'what' (daemonset workload) and includes the relevant imported variable 'NAMESPACE' as the 'where' (specific namespace). The title is also human-readable and specific.",
        "suggested_title": "Get Related Daemonset `${DAEMONSET_NAME}` Events in Namespace `${NAMESPACE}`"
    },
    {
        "codebundle": "k8s-daemonset-healthcheck",
        "file": "runbook.robot",
        "task": "Check Daemonset `${DAEMONSET_NAME}` Replicas",
        "score": 4,
        "reasoning": "The task provides a clear 'What' (resource type: daemonset) and a 'Where' in the form of the NAMESPACE variable.",
        "suggested_title": "Check Daemonset `${DAEMONSET_NAME}` Replicas in Namespace `${NAMESPACE}`"
    },
    {
        "codebundle": "k8s-deployment-healthcheck",
        "file": "runbook.robot",
        "task": "Check Deployment Log For Issues with `${DEPLOYMENT_NAME}`",
        "score": 4,
        "reasoning": "The title is clear about the task (checking deployment log for issues) and includes a specific resource type (${DEPLOYMENT_NAME}), but lacks a specific location. The most relevant imported variable for 'Where' would be 'NAMESPACE'.",
        "suggested_title": "Check Deployment Log For Issues with `${DEPLOYMENT_NAME}` in Namespace `${NAMESPACE}`"
    },
    {
        "codebundle": "k8s-deployment-healthcheck",
        "file": "runbook.robot",
        "task": "Fetch Deployments Logs for `${DEPLOYMENT_NAME}` and Add to Report",
        "score": 4,
        "reasoning": "The task provides a clear 'what' (Fetch Deployments Logs) and uses the variable ${DEPLOYMENT_NAME} as a specific 'where' variable to indicate which deployment's logs to fetch.",
        "suggested_title": "Fetch Deployments Logs for Deployment XYZ and Add to Report"
    },
    {
        "codebundle": "k8s-deployment-healthcheck",
        "file": "runbook.robot",
        "task": "Check Liveness Probe Configuration for Deployment `${DEPLOYMENT_NAME}`",
        "score": 5,
        "reasoning": "The task is very clear, human-readable, and specific. It includes both the 'What' (liveliness probe configuration for a specific deployment) and the 'Where' (specific deployment name).",
        "suggested_title": "Check Liveness Probe Configuration for Deployment 'DEPLOYMENT_NAME' in Namespace 'NAMESPACE'"
    },
    {
        "codebundle": "k8s-deployment-healthcheck",
        "file": "runbook.robot",
        "task": "Check Readiness Probe Configuration for Deployment `${DEPLOYMENT_NAME}`",
        "score": 5,
        "reasoning": "The task title is clear, human-readable, and specific. It includes 'what' (readiness probe configuration) and 'where' (specific deployment name).",
        "suggested_title": "Check Readiness Probe Configuration for Deployment 'DEPLOYMENT_NAME'"
    },
    {
        "codebundle": "k8s-deployment-healthcheck",
        "file": "runbook.robot",
        "task": "Inspect Container Restarts for Deployment `${DEPLOYMENT_NAME}` Namespace `${NAMESPACE}`",
        "score": 5,
        "reasoning": "The task title is very clear and specific, including both the 'What' (container restarts) and the 'Where' (deployment name and namespace). The documentation and tags also provide further context and detail.",
        "suggested_title": "Inspect Container Restarts for Deployment 'example_deployment' Namespace 'example_namespace'"
    },
    {
        "codebundle": "k8s-deployment-healthcheck",
        "file": "runbook.robot",
        "task": "Inspect Deployment Warning Events for `${DEPLOYMENT_NAME}`",
        "score": 4,
        "reasoning": "The task provides a clear 'What' (warning events related to the deployment workload) but lacks a specific 'Where'. The most relevant imported variable for 'Where' is 'NAMESPACE'.",
        "suggested_title": "Inspect Deployment Warning Events for `${DEPLOYMENT_NAME}` in namespace `${NAMESPACE}`"
    },
    {
        "codebundle": "k8s-deployment-healthcheck",
        "file": "runbook.robot",
        "task": "Get Deployment Workload Details For `${DEPLOYMENT_NAME}` and Add to Report",
        "score": 5,
        "reasoning": "The task provides the specific 'What' (deployment) and a 'Where' variable (${DEPLOYMENT_NAME}) for the location, making it fully detailed.",
        "suggested_title": "Get Deployment Workload Details For `${DEPLOYMENT_NAME}` in Namespace `${NAMESPACE}` and Add to Report"
    },
    {
        "codebundle": "k8s-deployment-healthcheck",
        "file": "runbook.robot",
        "task": "Inspect Deployment Replicas for `${DEPLOYMENT_NAME}`",
        "score": 5,
        "reasoning": "The title is highly specific, providing clear information on what is being checked (deployment replicas) and where (specific deployment name). It also includes additional details about the expected checks and potential issues to be raised.",
        "suggested_title": "Inspect Deployment Replicas for `${DEPLOYMENT_NAME}` in Namespace `${NAMESPACE}`"
    },
    {
        "codebundle": "k8s-deployment-healthcheck",
        "file": "runbook.robot",
        "task": "Check Deployment Event Anomalies for `${DEPLOYMENT_NAME}`",
        "score": 4,
        "reasoning": "The task provides a clear 'What' (Check Deployment Event Anomalies) but lacks a specific 'Where'. The most relevant imported variable for 'Where' would be 'NAMESPACE'.",
        "suggested_title": "Check Deployment Event Anomalies in namespace `${NAMESPACE}`"
    },
    {
        "codebundle": "k8s-deployment-healthcheck",
        "file": "runbook.robot",
        "task": "Check ReplicaSet Health for Deployment `${DEPLOYMENT_NAME}`",
        "score": 5,
        "reasoning": "The task title is clear, human-readable, and specific, including both the 'What' (ReplicaSet Health for Deployment) and the 'Where' information through the imported user variable ${DEPLOYMENT_NAME}. It also provides a brief documentation of what the task entails.",
        "suggested_title": "Check ReplicaSet Health for Deployment '${DEPLOYMENT_NAME}' in Namespace '${NAMESPACE}'"
    },
    {
        "codebundle": "k8s-labeledpods-healthcheck",
        "file": "sli.robot",
        "task": "Measure Number of Running Pods with Label",
        "score": 3,
        "reasoning": "The task title is specific, clear, and human-readable. It clearly states the 'What' (number of running pods with label) and provides relevant context for the 'Where' (using the imported variable NAMESPACE). The documentation and tags also support the clarity and specificity of the task. The task lacks a specific 'Where' variable; consider using `NAMESPACE`.",
        "suggested_title": "Measure Number of Running Pods with Label in Namespace '${NAMESPACE}'"
    },
    {
        "codebundle": "k8s-app-troubleshoot",
        "file": "sli.robot",
        "task": "Measure Application Exceptions",
        "score": 3,
        "reasoning": "The task provides detail about 'what' is being measured (Application Exceptions) but lacks a specific 'Where'. The most relevant imported variable for 'Where' is 'NAMESPACE'. The task lacks a specific 'Where' variable; consider using `NAMESPACE`.",
        "suggested_title": "Measure Application Exceptions in Namespace '${NAMESPACE}'"
    },
    {
        "codebundle": "k8s-app-troubleshoot",
        "file": "runbook.robot",
        "task": "Get `${CONTAINER_NAME}` Application Logs",
        "score": 4,
        "reasoning": "The task provides a clear 'What' (Application Logs) but lacks a specific 'Where'. 'NAMESPACE' could be suggested as the most relevant imported variable for 'Where'.",
        "suggested_title": "Get `${CONTAINER_NAME}` Application Logs in Namespace `${NAMESPACE}`"
    },
    {
        "codebundle": "k8s-app-troubleshoot",
        "file": "runbook.robot",
        "task": "Scan `${CONTAINER_NAME}` Application For Misconfigured Environment",
        "score": 5,
        "reasoning": "The task title is specific and clear about what is being checked (Scan `${CONTAINER_NAME}` Application) and where it will be checked (Misconfigured Environment)",
        "suggested_title": "Scan `${CONTAINER_NAME}` Application For Misconfigured Environment in `${NAMESPACE}` Namespace"
    },
    {
        "codebundle": "k8s-app-troubleshoot",
        "file": "runbook.robot",
        "task": "Tail `${CONTAINER_NAME}` Application Logs For Stacktraces",
        "score": 4,
        "reasoning": "The task provides a clear 'what' (tail application logs for stacktraces) and includes a specific 'where' variable (container name). It is human-readable and specific.",
        "suggested_title": "Tail Application Logs For Stacktraces in `${CONTAINER_NAME}`"
    },
    {
        "codebundle": "aws-cloudwatch-overused-ec2",
        "file": "runbook.robot",
        "task": "Check For Overutilized Ec2 Instances",
        "score": 2,
        "reasoning": "Provides more detail about 'what' is being checked, but lacks a location.",
        "suggested_title": "No suggestion required"
    },
    {
        "codebundle": "k8s-argocd-helm-health",
        "file": "runbook.robot",
        "task": "Fetch all available ArgoCD Helm releases in namespace `${NAMESPACE}`",
        "score": 4,
        "reasoning": "The task provides a clear 'what' (fetch all available ArgoCD Helm releases) and a relevant 'where' (namespace). The documentation and tags also add to its clarity and specificity.",
        "suggested_title": "Fetch all available ArgoCD Helm releases in namespace ${NAMESPACE}"
    },
    {
        "codebundle": "k8s-argocd-helm-health",
        "file": "runbook.robot",
        "task": "Fetch Installed ArgoCD Helm release versions in namespace `${NAMESPACE}`",
        "score": 4,
        "reasoning": "The task is clear in terms of what is being fetched (Installed ArgoCD Helm release versions) and uses the imported variable for 'Where' (namespace). It lacks specific details about the namespace, but it is still relatively clear.",
        "suggested_title": "Fetch Installed ArgoCD Helm release versions in namespace `${NAMESPACE}` in Kubernetes distribution `${DISTRIBUTION}`"
    },
    {
        "codebundle": "aws-s3-bucket-storage-report",
        "file": "runbook.robot",
        "task": "Check AWS S3 Bucket Storage Utilization",
        "score": 3,
        "reasoning": "The title is clear, specific, and human-readable. It provides detailed information about what is being checked (AWS S3 Bucket Storage Utilization) and where (specific AWS region). The imported variable 'AWS_REGION' is used for the 'Where'. The task lacks a specific 'Where' variable; consider using `AWS_REGION`.",
        "suggested_title": "Check AWS S3 Bucket Storage Utilization in AWS Region `${AWS_REGION}`"
    },
    {
        "codebundle": "curl-gmp-nginx-ingress-inspection",
        "file": "runbook.robot",
        "task": "Fetch Nginx HTTP Errors From GMP for Ingress `${INGRESS_OBJECT_NAME}`",
        "score": 5,
        "reasoning": "The task provides clear and specific details about what is being fetched (Nginx HTTP Errors), where it's being fetched from (GMP for Ingress `${INGRESS_OBJECT_NAME}`), and the purpose of the task (for further troubleshooting). It also includes relevant tags for clarity.",
        "suggested_title": "Fetch Nginx HTTP Errors From GMP for Ingress `${INGRESS_OBJECT_NAME}`"
    },
    {
        "codebundle": "curl-gmp-nginx-ingress-inspection",
        "file": "runbook.robot",
        "task": "Find Owner and Service Health for Ingress `${INGRESS_OBJECT_NAME}`",
        "score": 4,
        "reasoning": "The task provides a clear 'What' (resource type) and a specific 'Where' (INGRESS_OBJECT_NAME) variable, but it could be improved by including the 'Where' variable INGRESS_HOST as well for better clarity.",
        "suggested_title": "Find Owner and Service Health for Ingress `${INGRESS_OBJECT_NAME}` at `${INGRESS_HOST}`"
    },
    {
        "codebundle": "k8s-ingress-healthcheck",
        "file": "runbook.robot",
        "task": "Fetch Ingress Object Health in Namespace `${NAMESPACE}`",
        "score": 5,
        "reasoning": "The title is clear, human-readable, and specific. It includes the 'What' (Ingress Object Health) and the 'Where' (specific Namespace). It also mentions the specific outputs expected.",
        "suggested_title": "Fetch Ingress Object Health in Namespace `${NAMESPACE}`"
    },
    {
        "codebundle": "k8s-ingress-healthcheck",
        "file": "runbook.robot",
        "task": "Check for Ingress and Service Conflicts in Namespace `${NAMESPACE}`",
        "score": 5,
        "reasoning": "The task provides specific detail about what is being checked (conflicting configuration between service and ingress objects) and includes the 'Where' variable NAMESPACE as the scope.",
        "suggested_title": "Check for Ingress and Service Conflicts in Namespace `${NAMESPACE}`"
    }
]