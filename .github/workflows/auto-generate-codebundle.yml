name: Auto-Generate Codebundle from Issue

on:
  issues:
    types: [opened, labeled]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to process'
        required: true
        type: number

jobs:
  generate-codebundle:
    # Run if manually triggered OR if issue has labels containing 'new' and 'auto-intake'
    if: |
      github.event_name == 'workflow_dispatch' || 
      (contains(join(github.event.issue.labels.*.name, ' '), 'new') && 
       contains(join(github.event.issue.labels.*.name, ' '), 'auto-intake'))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0


      - name: Update labels - Start Processing
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = ${{ github.event.inputs.issue_number || github.event.issue.number }};
            
            // Add processing label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              labels: ['codebundle-processing']
            });
            
            // Remove trigger labels (anything with 'new' or 'auto-intake')
            const { data: issue } = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber
            });
            
            for (const label of issue.labels) {
              const labelName = typeof label === 'string' ? label : label.name;
              if (labelName.includes('new') || labelName.includes('auto-intake')) {
                try {
                  await github.rest.issues.removeLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issueNumber,
                    name: labelName
                  });
                  console.log(`Removed trigger label: ${labelName}`);
                } catch (error) {
                  console.log(`Could not remove label ${labelName}: ${error.message}`);
                }
              }
            }

      - name: Generate Codebundle
        id: generate
        uses: ./.github/actions/codebundle-generator
        with:
          issue-number: ${{ github.event.inputs.issue_number || github.event.issue.number }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}

      - name: Create Pull Request
        if: steps.generate.outputs.success == 'true' || steps.generate.outputs.codebundle-name != ''
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "feat: auto-generated codebundle from issue #${{ github.event.inputs.issue_number || github.event.issue.number }}"
          title: "ü§ñ Auto-generated codebundle: ${{ steps.generate.outputs.codebundle-name }}"
          body: |
            ## ü§ñ Auto-Generated Codebundle
            
            This codebundle was automatically generated based on issue #${{ github.event.inputs.issue_number || github.event.issue.number }}
            
            ### Generated Components
            - **Codebundle**: `codebundles/${{ steps.generate.outputs.codebundle-name }}/`
            - **Scripts**: ${{ steps.generate.outputs.generated-scripts }}
            - **Tasks**: ${{ steps.generate.outputs.generated-tasks }}
            
            ### Review Checklist
            - [ ] Review generated bash scripts for correctness
            - [ ] Test Robot Framework tasks locally
            - [ ] Verify meta.yaml configuration
            - [ ] Check README documentation
            - [ ] Validate against existing patterns
            
            ### Next Steps
            1. Review the generated code
            2. Test locally using the provided instructions
            3. Make any necessary adjustments
            4. Merge when ready
            
            **Auto-closes**: #${{ github.event.inputs.issue_number || github.event.issue.number }}
          branch: auto-codebundle-${{ github.event.inputs.issue_number || github.event.issue.number }}
          delete-branch: true

      - name: Update issue labels on success
        if: steps.generate.outputs.success == 'true' || steps.generate.outputs.codebundle-name != ''
        uses: actions/github-script@v7
        with:
          script: |
            // Remove processing label and add success label
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.inputs.issue_number || github.event.issue.number }},
              name: 'codebundle-processing'
            });
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.inputs.issue_number || github.event.issue.number }},
              labels: ['codebundle-generated', 'pr-created']
            });

            // Add comment with PR link
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.inputs.issue_number || github.event.issue.number }},
              body: `ü§ñ **Codebundle Generated Successfully!**
              
              I've created a pull request with your auto-generated codebundle: **${{ steps.generate.outputs.codebundle-name }}**
              
              The PR includes:
              - Complete codebundle structure
              - Generated bash scripts for your tasks
              - Robot Framework task definitions
              - Documentation and metadata
              
              Please review the generated code and merge when ready!`
            });

      - name: Update issue labels on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            // Remove processing label and add failure label
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.inputs.issue_number || github.event.issue.number }},
              name: 'codebundle-processing'
            });
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.inputs.issue_number || github.event.issue.number }},
              labels: ['codebundle-failed']
            });

            // Add comment about failure
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.inputs.issue_number || github.event.issue.number }},
              body: `‚ùå **Codebundle Generation Failed**
              
              I encountered an error while trying to generate your codebundle. Please check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.
              
              Common issues:
              - Missing or unclear requirements in the issue description
              - Unsupported platform or service type
              - API rate limits
              
              Please update your issue with more details and I'll try again!`
            });

