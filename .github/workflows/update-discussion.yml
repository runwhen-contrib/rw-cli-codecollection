name: Check CodeBundle Discussions
on:
  workflow_dispatch:
  push:
jobs:
  check-discussions-on-main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Check if codebundle discussion exists
        id: find_and_create_codebundle_discussions
        run: |
          codebundles=$(find codebundles -type d -exec basename {} \; | grep -v "codebundles")   
          # remove this after testing       
          codebundles=test
          echo "Found codebundles: $codebundles"
          echo "Searching discussions..."
          pwd
          ls -lha
          tree .github
          cat .github/queries/searchDiscussions.graphql
          # Read the queries from separate files
          search_discussions_query=$(cat .github/queries/searchDiscussions.graphql | tr -d '\n' | sed 's/"/\\\"/g')
          echo $search_discussions_query
          create_discussion_query=$(cat .github/queries/createDiscussion.graphql | tr -d '\n' | sed 's/"/\\\"/g')
          add_comment_query=$(cat .github/queries/addDiscussionComment.graphql | tr -d '\n' | sed 's/"/\\\"/g')
          get_comments_query=$(cat .github/queries/getComments.graphql | tr -d '\n' | sed 's/"/\\\"/g')
          echo "done var fetch"
          # Perform the searchDiscussions query
          search_response=$(curl -s -H "Authorization: Bearer $GH_TOKEN" -H "Content-Type: application/json" -X POST -d "{\"query\": \"$search_discussions_query\", \"variables\": {\"searchQuery\": \"org:runwhen-contrib\"}}" https://api.github.com/graphql)
          echo $search_response
          discussion_nodes=$(echo "$search_response" | jq -r '[.data.search.edges[].node.discussions.nodes[] | select(.title != null) | { id, title }] | { items: . }')
          echo $discussion_nodes

          for codebundle in $codebundles; do
            found=false
            echo $codebundle
            jq -c '.items[]' <<< "$discussion_nodes" | while read -r discussion_node; do
              echo "$discussion_node"
              node_codebundle=$(echo "$discussion_node" | jq -r '.title')
              discussion_id=$(echo "$discussion_node" | jq -r '.id')

              if [[ "$codebundle" == "$node_codebundle" ]]; then
                found=true
                echo "Discussion found for $codebundle with ID: $discussion_id"

                # # Fetch comments for the discussion
                # comments_response=$(curl -s -H "Authorization: Bearer $GH_TOKEN" -H "Content-Type: application/json" -X POST -d "{\"query\": \"$get_comments_query\", \"variables\": {\"discussion_id\": \"$discussion_id\"}}" https://api.github.com/graphql)
                # notes=$(echo "$comments_response" | jq -r '.data.node.comments.edges[].node.body')

                # if [[ -z $notes ]]; then
                #   echo "Adding note to discussion for $codebundle"
                #   curl -s -H "Authorization: Bearer $GH_TOKEN" -H "Content-Type: application/json" -X POST -d "{\"query\": \"$add_comment_query\", \"variables\": {\"discussion_id\": \"$discussion_id\"}}" https://api.github.com/graphql 
                # fi

                break
              fi
            done

            if ! $found; then
              echo "No matching discussion found for $codebundle"
              echo "Creating new discussion for $codebundle"
              discussion_body=$codebundle
              #Troubleshooting Commands Category
              category_id="DIC_kwDOJo2Id84CXeeV"
              # The repository_id that we need to use  
              repo_id="R_kgDOJo2Idw"              
              curl -s -H "Authorization: Bearer $GH_TOKEN" -H "Content-Type: application/json" -X POST -d "{\"query\": \"$create_discussion_query\", \"variables\": {\"repo_id\": \"$repo_id\", \"codebundle\": \"$codebundle\",\"discussion_body\": \"$discussion_body\", \"category_id\": \"$category_id\"}}" https://api.github.com/graphql 
            fi
          done

        env:
          GH_TOKEN: ${{ secrets.PAT }}