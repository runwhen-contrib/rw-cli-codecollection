commands:
- command: 'curl -o /dev/null -w ''{"http_code": %{http_code}, "time_total": %{time_total}}''
    -s ${URL}'
  doc_links: '

    - [curl documentation](https://curl.se/docs/manpage.html){:target="_blank"}

    - [HTTP response codes explained](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status){:target="_blank"}

    - [JSON format overview](https://www.json.org/json-en.html){:target="_blank"}'
  explanation: This command uses the curl utility to send a request to a specified
    URL, and then outputs the HTTP response code and total time of the request in
    JSON format. The -o /dev/null option discards the normal output, and -s ensures
    it runs silently.
  multi_line_details: "# This command uses curl to send an HTTP request to the specified\
    \ URL and capture the response time and HTTP status code.\n\n# -o /dev/null: Specifies\
    \ a file or device to write output to. In this case, we're writing the response\
    \ to /dev/null to discard it.\n# -w '{\"http_code\": %{http_code}, \"time_total\"\
    : %{time_total}}': This option customizes the output format of curl to return\
    \ the HTTP status code and total time taken for the request.\n# -s: Suppresses\
    \ the progress meter and any other non-error output.\n\n# Replace ${URL} with\
    \ the actual URL that you want to send the request to.\n\ncurl -o /dev/null \\\
    \n  -w '{\"http_code\": %{http_code}, \"time_total\": %{time_total}}' \\\n  -s\
    \ ${URL}"
  name: checking_http_url_is_available_and_timely
  when_is_it_useful: '1. Monitoring the uptime and response time of a web server or
    service

    2. Automating health checks and load testing for a microservices architecture

    3. Integrating with a continuous integration/continuous deployment (CI/CD) pipeline
    to verify deployments

    4. Troubleshooting network connectivity and latency issues within a distributed
    system

    5. Generating performance reports and metrics for SLA compliance and capacity
    planning'
- command: 'curl -o /dev/null -w ''{"http_code": %{http_code}, "time_total": %{time_total}}''
    -s ${URL}'
  doc_links: '

    - [curl documentation](https://curl.se/docs/manpage.html){:target="_blank"}

    - [HTTP response codes explained](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status){:target="_blank"}

    - [JSON format overview](https://www.json.org/json-en.html){:target="_blank"}'
  explanation: This command uses the curl utility to send a request to a specified
    URL, and then outputs the HTTP response code and total time of the request in
    JSON format. The -o /dev/null option discards the normal output, and -s ensures
    it runs silently.
  multi_line_details: "# This command uses curl to send an HTTP request to the specified\
    \ URL and capture the response time and HTTP status code.\n\n# -o /dev/null: Specifies\
    \ a file or device to write output to. In this case, we're writing the response\
    \ to /dev/null to discard it.\n# -w '{\"http_code\": %{http_code}, \"time_total\"\
    : %{time_total}}': This option customizes the output format of curl to return\
    \ the HTTP status code and total time taken for the request.\n# -s: Suppresses\
    \ the progress meter and any other non-error output.\n\n# Replace ${URL} with\
    \ the actual URL that you want to send the request to.\n\ncurl -o /dev/null \\\
    \n  -w '{\"http_code\": %{http_code}, \"time_total\": %{time_total}}' \\\n  -s\
    \ ${URL}"
  name: checking_http_url_is_available_and_timely
  when_is_it_useful: '1. Monitoring the uptime and response time of a web server or
    service

    2. Automating health checks and load testing for a microservices architecture

    3. Integrating with a continuous integration/continuous deployment (CI/CD) pipeline
    to verify deployments

    4. Troubleshooting network connectivity and latency issues within a distributed
    system

    5. Generating performance reports and metrics for SLA compliance and capacity
    planning'
