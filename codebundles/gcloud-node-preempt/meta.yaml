commands:
- command: gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
    && gcloud compute operations list --filter='operationType:(compute.instances.preempted)'
    --format=json --project=${GCP_PROJECT_ID} | jq -r --arg now "$(date -u +%s)" '[.[]
    | select((.startTime | sub("\\.[0-9]+"; "") | strptime("%Y-%m-%dT%H:%M:%S%z")
    | mktime) > ($now | tonumber - (${AGE}*60)))] '
  doc_links: '

    - [Service Account Authentication in GCP](https://cloud.google.com/iam/docs/creating-managing-service-accounts){:target="_blank"}

    - [Preempted Compute Instances in GCP](https://cloud.google.com/compute/docs/instances/preemptible){:target="_blank"}'
  explanation: This command activates a service account authentication and then lists
    all preempted compute instances within a specific time frame in a Google Cloud
    Platform project.
  multi_line_details: "\n# Activate service account using the key file specified in\
    \ the environment variable GOOGLE_APPLICATION_CREDENTIALS\ngcloud auth activate-service-account\
    \ --key-file=$GOOGLE_APPLICATION_CREDENTIALS && \n# List all compute operations\
    \ with operationType of preempted instances in JSON format for the specified Google\
    \ Cloud Platform project\ngcloud compute operations list --filter='operationType:(compute.instances.preempted)'\
    \ --format=json --project=${GCP_PROJECT_ID} | \n# Use jq to filter and format\
    \ the output based on start time and age\njq -r --arg now \"$(date -u +%s)\" '[.[]\
    \ | select((.startTime | sub(\"\\\\.[0-9]+\"; \"\") | strptime(\"%Y-%m-%dT%H:%M:%S%z\"\
    ) | mktime) > ($now | tonumber - (${AGE}*60)))] '\n\n\nThis multi-line command\
    \ is helpful for newer or less experienced devops engineers as it breaks down\
    \ the original command into smaller steps with descriptive comments for each step.\
    \ This helps them understand what each part of the command is doing and how it\
    \ contributes to the overall functionality."
  name: list_all_nodes_in_an_active_prempt_operation_for_gcp_project_gcp_project_id
  when_is_it_useful: '1. Investigating and resolving performance issues in a Kubernetes
    cluster, such as high CPU or memory utilization, by identifying and addressing
    any bottlenecked or underperforming pods.

    2. Troubleshooting and resolving Kubernetes CrashLoopBackoff events, which occur
    when a container repeatedly crashes after starting up, by identifying the root
    cause and implementing appropriate fixes.

    3. Monitoring and optimizing resource allocation in a Kubernetes cluster to ensure
    efficient usage of compute instances and avoid potential overutilization or underutilization.

    4. Managing service account authentication for accessing resources within a Google
    Cloud Platform project and ensuring proper authorization and permissions are in
    place for preempted compute instances.

    5. Implementing automated alerting and reporting for preempted compute instances
    within a specific time frame in a Google Cloud Platform project, in order to gain
    insights into potential service disruptions and take proactive measures to mitigate
    them.'
