commands:
- command: gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
    && gcloud compute operations list --filter="operationType:( compute.instances.preempted
    ) AND NOT status:( DONE )" --format=json --project=${GCP_PROJECT_ID} | jq '[.[]
    | {startTime,targetLink, statusMessage, progress, zone, selfLink}]'
  explanation: '


    This command is used to get a list of all preempted Google Compute instances from
    a specific project. To do this, it uses the Google Cloud Platform authentication
    service to activate a service account with the key-file specified in the environment
    variable GOOGLE_APPLICATION_CREDENTIALS. The command then lists operations with
    operationType compute.instances.preempted and without status DONE, formatting
    the output as JSON and using the project ID stored in the environment variable
    GCP_PROJECT_ID. Finally, the JSON is parsed using jq to select certain fields
    (startTime, targetLink, statusMessage, progress, zone, selfLink).'
  multi_line_details: "\n\n# The command below can be used to check instances that\
    \ have been preempted in a GCP project.\n\n# First, authenticate with the service\
    \ account\ngcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS\n\
    \n# Next, use the 'gcloud compute operations list' command to filter and format\
    \ the output data\ngcloud compute operations list \\\n    --filter=\"operationType:(\
    \ compute.instances.preempted ) AND NOT status:( DONE )\" \\\n    --format=json\
    \ \\\n    --project=${GCP_PROJECT_ID}\n\n# Finally, pipe the output through jq\
    \ to format it as an array of objects containing certain properties\njq '[.[]\
    \ | {startTime,targetLink, statusMessage, progress, zone, selfLink}]'"
  name: list_all_nodes_in_an_active_prempt_operation
