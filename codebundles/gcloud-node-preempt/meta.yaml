commands:
- command: gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
    && gcloud compute operations list --filter="operationType:( compute.instances.preempted
    ) AND NOT status:( DONE )" --format=json --project=${GCP_PROJECT_ID} | jq '[.[]
    | {startTime,targetLink, statusMessage, progress, zone, selfLink}]'
  doc_links: "\n\n1. GCP authentication overview: https://cloud.google.com/docs/authentication/getting-started\n\
    2. Service Account basics: https://cloud.google.com/iam/docs/service-accounts\n\
    3. Compute operations list overview: https://cloud.google.com/sdk/gcloud/reference/compute/operations/list\n\
    4. JQ overview: https://stedolan.github.io/jq/manual/ \n5. GCP project concepts:\
    \ https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy#projects\n\
    6. Overview of Google Compute Instances: https://cloud.google.com/compute/docs/instances/"
  explanation: '


    This command is used to list preemptible Compute Engine operations on a Google
    Cloud Platform project. Preemptible instances are short-lived Google Compute Engine
    virtual machines that have an automatically-discounted price in exchange for flexibility.
    This command uses Google Cloud''s authentication service to authorize the request
    with your credentials which are passed as an environment variable (GOOGLE_APPLICATION_CREDENTIALS).


    The command also specifies the operation type, status, and format in order to
    get the desired information in json format. Additionally it filters based on target
    project which is passed in as another environment variable (GCP_PROJECT_ID). The
    output is then piped to the jq program in order to extract specific fields from
    the list of preemptible operations retrieved from Google Cloud Platform. The fields
    extracted include startTime, targetLink, statusMessage, progress, zone and selfLink.'
  multi_line_details: "\n\n# This command will establish authorization with a Service\
    \ Account defined in \n# the environment variable $GOOGLE_APPLICATION_CREDENTIALS\
    \ and then list all \n# operations concerning preempted Google Compute instances\
    \ that are still in \n# progress, along with some metadata. Note that the jq output\
    \ filter will \n# determine exactly which fields of the operation objects are\
    \ returned in \n# the final output.\n\n# First, authorize to the GCP project with\
    \ credentials from the environment\ngcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS\
    \ \n\n# Then, construct a query string including the GCP project ID, for use as\
    \ a filter when working with Compute Operations\nQUERY_STRING=\"operationType:(\
    \ compute.instances.preempted ) AND NOT status:( DONE )\"\n\n# List filtered Compute\
    \ Operations\ngcloud compute operations list --filter=\"${QUERY_STRING}\" \\\n\
    \t--format=json \\\n    --project=${GCP_PROJECT_ID}\n\n# Pipe results through\
    \ jq to get desired output format\n| jq '[.[] | {startTime,targetLink, statusMessage,\
    \ progress, zone, selfLink}]'"
  name: list_all_nodes_in_an_active_prempt_operation
