commands:
- command: gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
    && gcloud functions list --filter="state!=ACTIVE OR status!=ACTIVE" --format="table[box](name,
    state, status, stateMessages.severity, stateMessages.type, stateMessages.message:wrap=30)"
    --project=${GCP_PROJECT_ID} && echo "Run 'gcloud functions describe [name]' for
    full details."
  doc_links: '

    '
  explanation: This command activates a service account for Google Cloud and then
    lists all the Google Cloud functions that are not in an active state, displaying
    specific details about each function's status and severity messages. It also provides
    a prompt to run a specific command for more information on each function.
  multi_line_details: "\n# Activate the service account using the key file from the\
    \ environment variable\ngcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS\
    \ && \n\n# List all cloud functions that are not in an active state or status\n\
    gcloud functions list --filter=\"state!=ACTIVE OR status!=ACTIVE\" \\\n--format=\"\
    table[box](name, state, status, stateMessages.severity, stateMessages.type, stateMessages.message:wrap=30)\"\
    \ \\\n--project=${GCP_PROJECT_ID} && \n\n# Provide a message for the user to get\
    \ more details about a specific function\necho \"Run 'gcloud functions describe\
    \ [name]' for full details.\"\n"
  name: list_unhealhy_cloud_functions_in_gcp_project_gcp_project_id
- command: gcloud functions list --filter="state!=ACTIVE OR status!=ACTIVE" --format="value(name)"
    --project=${GCP_PROJECT_ID} | xargs -I {} gcloud logging read "severity=ERROR
    AND resource.type=cloud_function AND resource.labels.function_name={}" --limit
    50 --freshness=14d
  doc_links: '

    '
  explanation: This command is used to list all Google Cloud Functions that are not
    in an active state, and then output the names of those functions. It then uses
    the function names to retrieve error logs from the past 14 days for each function.
  multi_line_details: "# This command lists all Google Cloud Functions that are not\
    \ in an active state and then retrieves the logs for those functions with error\
    \ severity within the last 14 days.\n\n# Step 1: List all Google Cloud Functions\
    \ that are not in an active state\ngcloud functions list --filter=\"state!=ACTIVE\
    \ OR status!=ACTIVE\" --format=\"value(name)\" --project=${GCP_PROJECT_ID} \n\n\
    # Step 2: Pass the output of the previous command to the xargs command, which\
    \ will iterate through each function name and execute the next gcloud command\
    \ \n| xargs -I {} \n\n# Step 3: Retrieve logs for each function with error severity\
    \ within the last 14 days\ngcloud logging read \"severity=ERROR AND resource.type=cloud_function\
    \ AND resource.labels.function_name={}\" --limit 50 --freshness=14d"
  name: get_error_logs_for_unhealthy_cloud_functions_in_gcp_project_gcp_project_id
