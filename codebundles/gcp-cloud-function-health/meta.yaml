commands:
- command: gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
    && gcloud functions list --filter="state!=ACTIVE OR status!=ACTIVE" --format="table[box](name,
    state, status, stateMessages.severity, stateMessages.type, stateMessages.message:wrap=30)"
    --project=${GCP_PROJECT_ID} && echo "Run 'gcloud functions describe [name]' for
    full details."
  doc_links: '

    - [Activating a service account for authentication](https://cloud.google.com/iam/docs/creating-managing-service-accounts){:target="_blank"}

    - [Listing Google Cloud functions](https://cloud.google.com/functions/docs/quickstart){:target="_blank"}

    - [Formatted table of function names, states, statuses, and error messages](https://cloud.google.com/sdk/gcloud/reference/functions/list){:target="_blank"}'
  explanation: This command activates a service account for authentication, then lists
    any Google Cloud functions that are not currently active or in an error state,
    and provides a formatted table of their names, states, statuses, and error messages.
    It also reminds the user to use another command to get more detailed information
    about a specific function.
  multi_line_details: '# First, activate the service account using the key file specified
    in the environment variable GOOGLE_APPLICATION_CREDENTIALS

    gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS


    # Next, list all Cloud Functions that are not in the ACTIVE state or have a status
    other than ACTIVE

    # Format the output into a table for easier readability and include additional
    details about the state messages

    # Specify the project using the GCP_PROJECT_ID environment variable

    gcloud functions list --filter="state!=ACTIVE OR status!=ACTIVE" --format="table[box](name,
    state, status, stateMessages.severity, stateMessages.type, stateMessages.message:wrap=30)"
    --project=${GCP_PROJECT_ID}


    # Lastly, provide a helpful message to remind the user how to obtain full details
    for a specific function

    echo "Run ''gcloud functions describe [name]'' for full details."'
  name: list_unhealhy_cloud_functions_in_gcp_project_gcp_project_id
- command: gcloud functions list --filter="state!=ACTIVE OR status!=ACTIVE" --format="value(name)"
    --project=${GCP_PROJECT_ID} | xargs -I {} gcloud logging read "severity=ERROR
    AND resource.type=cloud_function AND resource.labels.function_name={}" --limit
    50 --freshness=14d
  doc_links: '

    - [gcloud command-line tool overview](https://cloud.google.com/sdk/gcloud){:target="_blank"}

    - [Google Cloud Functions documentation](https://cloud.google.com/functions/docs){:target="_blank"}'
  explanation: This command uses the gcloud tool to list all Google Cloud Functions
    that are not in an active state, and then searches the logs for those functions
    to find any error messages that have occurred in the last 14 days.
  multi_line_details: "\n# List all cloud functions that are not in the ACTIVE state\n\
    # and that do not have an ACTIVE status\ngcloud functions list --filter=\"state!=ACTIVE\
    \ OR status!=ACTIVE\" \\\n    --format=\"value(name)\" --project=${GCP_PROJECT_ID}\
    \ \\\n    | xargs -I {} \\\n    # For each cloud function found, read the error\
    \ logs associated with it\n    gcloud logging read \"severity=ERROR AND resource.type=cloud_function\
    \ AND resource.labels.function_name={}\" \\\n    --limit 50 --freshness=14d\n"
  name: get_error_logs_for_unhealthy_cloud_functions_in_gcp_project_gcp_project_id
