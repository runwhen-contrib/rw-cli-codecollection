commands:
- command: kubectl get ${RESOURCE_NAME} -n ${NAMESPACE} --context ${CONTEXT} -o=json
    | jq -r '.items[] | select(.spec.source.helm != null) | "\nName:\t\t\t" + .metadata.name
    + "\nSync Status:\t\t" + .status.sync.status + "\nHealth Status:\t\t" + .status.health.status'
  doc_links: '

    - [Kubernetes Documentation on kubectl get](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#get){:target="_blank"}

    - [Kubernetes Documentation on Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}

    - [Kubernetes Documentation on Configuring kubectl](https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/){:target="_blank"}

    - [jq Manual](https://stedolan.github.io/jq/manual/){:target="_blank"}'
  explanation: This command retrieves information about a specific Kubernetes resource
    in the specified namespace and context, then uses the 'jq' tool to format the
    output in a human-readable way, including the resource name, sync status, and
    health status.
  multi_line_details: "#!/bin/bash\n# This script retrieves and formats specific information\
    \ about a k8s resource\n# using `kubectl get` command and jq to parse JSON output.\n\
    \nkubectl get ${RESOURCE_NAME} \\\n    -n ${NAMESPACE} \\\n    --context ${CONTEXT}\
    \ \\\n    -o=json | jq -r '.items[] \n    | select(.spec.source.helm != null)\
    \ \n    | \"\\nName:\\t\\t\\t\" + .metadata.name + \n      \"\\nSync Status:\\\
    t\\t\" + .status.sync.status + \n      \"\\nHealth Status:\\t\\t\" + .status.health.status'"
  name: fetch_all_available_argocd_helm_releases
- command: kubectl get ${RESOURCE_NAME} -n ${NAMESPACE} --context ${CONTEXT} -o=json
    | jq -r '.items[] | select(.spec.source.helm != null) | "\nName:\t\t\t" + .metadata.name
    + "\nTarget Revision:\t" + .spec.source.targetRevision + "\nAttempted Revision:\t"
    + .status.sync.revision + "\nSync Status:\t\t" + .status.sync.status + "\nOperational
    State:\t" + .status.operationState.message'
  doc_links: '

    '
  explanation: This command retrieves information about a specific Kubernetes resource
    in a specific namespace and context, filtering for resources related to Helm charts
    and displaying their name, target revision, attempted revision, sync status, and
    operational state using a JSON output format.
  multi_line_details: "```bash\n#!/bin/bash\n\n# Get the specified Kubernetes resource\
    \ in the given namespace and context\nkubectl get ${RESOURCE_NAME} -n ${NAMESPACE}\
    \ --context ${CONTEXT} -o=json |\n  # Use jq to process the JSON output\n  jq\
    \ -r '.items[] | \n    # Select items with a non-null helm source\n    select(.spec.source.helm\
    \ != null) | \n    # Format and print the desired fields\n    \"\\nName:\\t\\\
    t\\t\" + .metadata.name + \n    \"\\nTarget Revision:\\t\" + .spec.source.targetRevision\
    \ + \n    \"\\nAttempted Revision:\\t\" + .status.sync.revision + \n    \"\\nSync\
    \ Status:\\t\\t\" + .status.sync.status + \n    \"\\nOperational State:\\t\" +\
    \ .status.operationState.message'\n```"
  name: fetch_installed_argocd_helm_release_versions
