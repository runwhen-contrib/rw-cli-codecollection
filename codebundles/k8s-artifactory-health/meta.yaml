commands:
- command: kubectl exec statefulset/${STATEFULSET_NAME} --context=${CONTEXT} -n ${NAMESPACE}
    -- curl -k --max-time 10 http://localhost:8091/artifactory/api/v1/system/liveness
  doc_links: '

    - [Kubernetes Exec](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#exec){:target="_blank"}

    - [Stateful Sets](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/){:target="_blank"}

    - [Kubernetes Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}

    - [cURL Commandline Options](https://ec.haxx.se/usingcurl-verbose.html){:target="_blank"}'
  explanation: '


    This command uses the kubectl command line utility to execute a curl command on
    a StatefulSet with the given name, in the given context and namespace. The curl
    command makes a request to the localhost at port 8091 of the StatefulSet and obtains
    the liveness information from the Artifactory API v1. This command is used to
    regularly check whether the StatefulSet is running and if so, how many instances
    are running.'
  multi_line_details: "\n\n# Connect to a pod from the statefulset in order to make\
    \ a cURL request \n# to Artifactory's liveness API endpoint. \nkubectl exec \\\
    \n    # A name or unique identifier of the StatefulSet.\n    statefulset/${STATEFULSET_NAME}\
    \ \\\n    # The configured context to connect to when using kubectl.\n    --context=${CONTEXT}\
    \ \\\n    # An objects namespace.\n    -n ${NAMESPACE} \\\n    # Execute the curl\
    \ command \n    -- curl -k \\ \n    # Maximum time allowed for the entire operation.\n\
    \    --max-time 10 \\\n    # Request URL.\n    http://localhost:8091/artifactory/api/v1/system/liveness"
  name: check_artifactory_liveness_and_readiness_endpoints
- command: kubectl exec statefulset/${STATEFULSET_NAME} --context=${CONTEXT} -n ${NAMESPACE}
    -- curl -k --max-time 10 http://localhost:8091/artifactory/api/v1/system/readiness
  doc_links: '

    - [kubectl documentation](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands){:target="_blank"}

    - [kubectl exec command reference](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#exec){:target="_blank"}

    - [statefulsets in Kubernetes concepts](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/){:target="_blank"}

    - [Kubernetes context concept](https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/){:target="_blank"}

    - [Kubernetes namespace concept](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}

    - [curl page on max-time switch](http://man7.org/linux/man-pages/man1/curl.1.html){:target="_blank"}'
  explanation: '


    This command uses the kubectl command line tool to check the readiness of a service
    called "statefulset" in a particular context and namespace. It does this by sending
    an http request to a specific port (8091) on the localhost. This allows you to
    determine whether the service is ready to accept requests or not. This command
    can also be used to periodically check if the service is still running properly.'
  multi_line_details: "\n\n# Kubernetes commands allow a user to view, manage, and\
    \ add resources.\n# The kubectl command allows a user to run CLI commands directly\
    \ on Kubernetes clusters\n# In this example, kubectl is used to execute a curl-based\
    \ command for a statefulset using the context, namespace, and values indicated.\n\
    \nkubectl exec \\\n  --context=${CONTEXT} \\\n  --namespace=${NAMESPACE} \\\n\
    \  statefulset/${STATEFULSET_NAME} \\\n  -- curl \\\n  -k \\\n  --max-time 10\
    \ \\\n  http://localhost:8091/artifactory/api/v1/system/readiness"
  name: check_artifactory_liveness_and_readiness_endpoints
