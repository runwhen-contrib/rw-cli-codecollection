commands:
- command: kubectl exec statefulset/${STATEFULSET_NAME} --context=${CONTEXT} -n ${NAMESPACE}
    -- curl -k --max-time 10 http://localhost:8091/artifactory/api/v1/system/liveness
  doc_links: '

    - [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/){:target="_blank"}

    - [curl command](https://curl.se/docs/manpage.html){:target="_blank"}

    - [specific statefulset](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/){:target="_blank"}

    - [namespace in Kubernetes](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}

    - [liveness probe in Kubernetes](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/){:target="_blank"}

    - [SSL certificate validation in curl](https://curl.se/docs/sslcerts.html){:target="_blank"}

    - [curl --max-time flag](https://curl.se/docs/manpage.html#--max-time){:target="_blank"}'
  explanation: This command uses kubectl to execute a curl command on a specific statefulset
    in a given namespace, checking the liveness of an application running at the specified
    localhost endpoint. The "-k" flag ignores SSL certificate validation and the "--max-time
    10" flag sets a maximum time for the request to complete.
  multi_line_details: "\n# Set the k8s context to be used for the command\nCONTEXT=${CONTEXT}\n\
    \n# Set the namespace where the statefulset is running\nNAMESPACE=${NAMESPACE}\n\
    \n# Set the name of the statefulset you want to execute the command in\nSTATEFULSET_NAME=${STATEFULSET_NAME}\n\
    \n# Use kubectl exec to run a command inside a Kubernetes pod\n# The command will\
    \ be run inside the specified statefulset and namespace\n# The command being executed\
    \ is a curl request to check the liveness of an API endpoint\n# -k flag is used\
    \ to allow insecure SSL connections\n# --max-time 10 sets the maximum time for\
    \ the request to complete\nkubectl exec statefulset/${STATEFULSET_NAME} --context=${CONTEXT}\
    \ -n ${NAMESPACE} -- \\\n  curl -k --max-time 10 http://localhost:8091/artifactory/api/v1/system/liveness\n"
  name: check_artifactory_liveness_and_readiness_endpoints
- command: kubectl exec statefulset/${STATEFULSET_NAME} --context=${CONTEXT} -n ${NAMESPACE}
    -- curl -k --max-time 10 http://localhost:8091/artifactory/api/v1/system/liveness
  doc_links: '

    - [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/){:target="_blank"}

    - [curl command](https://curl.se/docs/manpage.html){:target="_blank"}

    - [specific statefulset](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/){:target="_blank"}

    - [namespace in Kubernetes](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}

    - [liveness probe in Kubernetes](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/){:target="_blank"}

    - [SSL certificate validation in curl](https://curl.se/docs/sslcerts.html){:target="_blank"}

    - [curl --max-time flag](https://curl.se/docs/manpage.html#--max-time){:target="_blank"}'
  explanation: This command uses kubectl to execute a curl command on a specific statefulset
    in a given namespace, checking the liveness of an application running at the specified
    localhost endpoint. The "-k" flag ignores SSL certificate validation and the "--max-time
    10" flag sets a maximum time for the request to complete.
  multi_line_details: "\n# Set the k8s context to be used for the command\nCONTEXT=${CONTEXT}\n\
    \n# Set the namespace where the statefulset is running\nNAMESPACE=${NAMESPACE}\n\
    \n# Set the name of the statefulset you want to execute the command in\nSTATEFULSET_NAME=${STATEFULSET_NAME}\n\
    \n# Use kubectl exec to run a command inside a Kubernetes pod\n# The command will\
    \ be run inside the specified statefulset and namespace\n# The command being executed\
    \ is a curl request to check the liveness of an API endpoint\n# -k flag is used\
    \ to allow insecure SSL connections\n# --max-time 10 sets the maximum time for\
    \ the request to complete\nkubectl exec statefulset/${STATEFULSET_NAME} --context=${CONTEXT}\
    \ -n ${NAMESPACE} -- \\\n  curl -k --max-time 10 http://localhost:8091/artifactory/api/v1/system/liveness\n"
  name: check_artifactory_liveness_and_readiness_endpoints
- command: kubectl exec statefulset/${STATEFULSET_NAME} --context=${CONTEXT} -n ${NAMESPACE}
    -- curl -k --max-time 10 http://localhost:8091/artifactory/api/v1/system/readiness
  doc_links: '

    - [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/){:target="_blank"}

    - [Curl command in Linux](https://linuxize.com/post/curl-command-examples/){:target="_blank"}

    - [Kubernetes StatefulSets](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/){:target="_blank"}

    - [Kubernetes Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}

    - [Artifactory API documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API){:target="_blank"}'
  explanation: This command is using kubectl to execute a curl request on a specific
    statefulset in a Kubernetes context and namespace, checking the readiness of an
    artifactory API endpoint with a maximum timeout of 10 seconds.
  multi_line_details: "\n# The 'kubectl exec' command allows us to execute a command\
    \ inside a running container in a Kubernetes pod.\n# We specify the statefulset,\
    \ context, and namespace using variables for flexibility and reusability.\n\n\
    kubectl exec statefulset/${STATEFULSET_NAME} \\ \n  --context=${CONTEXT} \\\n\
    \  -n ${NAMESPACE} \\\n  -- curl -k --max-time 10 http://localhost:8091/artifactory/api/v1/system/readiness\n\
    \n\nIn this command, we're using `curl` to send an HTTP request to a local service\
    \ at `http://localhost:8091/artifactory/api/v1/system/readiness` with a maximum\
    \ timeout of 10 seconds. This can be useful for checking the readiness of an Artifactory\
    \ or similar service running within a Kubernetes cluster."
  name: check_artifactory_liveness_and_readiness_endpoints
- command: kubectl exec statefulset/${STATEFULSET_NAME} --context=${CONTEXT} -n ${NAMESPACE}
    -- curl -k --max-time 10 http://localhost:8091/artifactory/api/v1/system/readiness
  doc_links: '

    - [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/){:target="_blank"}

    - [Curl command in Linux](https://linuxize.com/post/curl-command-examples/){:target="_blank"}

    - [Kubernetes StatefulSets](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/){:target="_blank"}

    - [Kubernetes Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}

    - [Artifactory API documentation](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API){:target="_blank"}'
  explanation: This command is using kubectl to execute a curl request on a specific
    statefulset in a Kubernetes context and namespace, checking the readiness of an
    artifactory API endpoint with a maximum timeout of 10 seconds.
  multi_line_details: "\n# The 'kubectl exec' command allows us to execute a command\
    \ inside a running container in a Kubernetes pod.\n# We specify the statefulset,\
    \ context, and namespace using variables for flexibility and reusability.\n\n\
    kubectl exec statefulset/${STATEFULSET_NAME} \\ \n  --context=${CONTEXT} \\\n\
    \  -n ${NAMESPACE} \\\n  -- curl -k --max-time 10 http://localhost:8091/artifactory/api/v1/system/readiness\n\
    \n\nIn this command, we're using `curl` to send an HTTP request to a local service\
    \ at `http://localhost:8091/artifactory/api/v1/system/readiness` with a maximum\
    \ timeout of 10 seconds. This can be useful for checking the readiness of an Artifactory\
    \ or similar service running within a Kubernetes cluster."
  name: check_artifactory_liveness_and_readiness_endpoints
