commands:
- command: kubectl logs --tail=100 daemonset/${DAEMONSET_NAME} --context ${CONTEXT}
    -n ${NAMESPACE}
  doc_links: '

    - [Kubernetes Logging Architecture](https://kubernetes.io/docs/concepts/cluster-administration/logging/){:target="_blank"}

    - [Kubectl Logs Command Documentation](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#logs){:target="_blank"}

    - [Kubectl Cheat Sheet](https://kubernetes.io/docs/reference/kubectl/cheatsheet/){:target="_blank"}'
  explanation: This command retrieves the last 100 lines of logs from a specific daemon
    set within a designated namespace and context in a Kubernetes cluster, allowing
    you to troubleshoot any issues or monitor its activity.
  multi_line_details: '#!/bin/bash


    # This script is used to retrieve the logs of a specific daemonset in a given
    namespace using kubectl.


    # Set variables

    DAEMONSET_NAME="example-daemonset"

    CONTEXT="example-context"

    NAMESPACE="example-namespace"


    # Retrieve logs of the specified daemonset

    kubectl logs --tail=100 daemonset/${DAEMONSET_NAME} --context ${CONTEXT} -n ${NAMESPACE}'
  name: get_daemonset_log_details_for_report
- command: kubectl get events --field-selector type=Warning --context ${CONTEXT} -n
    ${NAMESPACE} | grep -i "${DAEMONSET_NAME}" || true
  doc_links: '

    - [Kubernetes events API](https://kubernetes.io/docs/reference/using-api/api-concepts/#events){:target="_blank"}

    - [Filtering kubectl output](https://kubernetes.io/docs/reference/kubectl/cheatsheet/#output-formatting){:target="_blank"}

    - [DaemonSet in Kubernetes](https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/){:target="_blank"}'
  explanation: This command retrieves Kubernetes events with a type of Warning for
    a specific context and namespace, then filters the output to display only those
    related to a specific daemon set. The command also includes "|| true" to ensure
    that it returns a successful exit code even if no matching events are found.
  multi_line_details: "#!/bin/bash\n\n# This script gets events with type Warning\
    \ for a specific context and namespace\n# then greps for a specified daemonset\
    \ name\n\nkubectl get events \\\n  --field-selector type=Warning \\\n  --context\
    \ ${CONTEXT} \\\n  -n ${NAMESPACE} \\\n  | grep -i \"${DAEMONSET_NAME}\" || true"
  name: get_related_daemonset_events
- command: kubectl describe daemonset/${DAEMONSET_NAME} --context ${CONTEXT} -n ${NAMESPACE}
  doc_links: '

    - [Kubernetes DaemonSet Documentation](https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/){:target="_blank"}

    - [Kubectl Cheat Sheet](https://kubernetes.io/docs/reference/kubectl/cheatsheet/#kubectl-context-and-configuration){:target="_blank"}

    - [Understanding Kubernetes Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}'
  explanation: This command is used to provide detailed information about a specific
    daemon set in Kubernetes, including its current status and events, within a specific
    context (such as a different Kubernetes cluster) and namespace.
  multi_line_details: '#!/bin/bash


    # Set variables

    DAEMONSET_NAME="your_daemonset_name"

    CONTEXT="your_context"

    NAMESPACE="your_namespace"


    # Describe the daemonset using kubectl command

    kubectl describe daemonset/${DAEMONSET_NAME} \

    --context ${CONTEXT} \

    -n ${NAMESPACE}'
  name: check_daemonset_replicas
