commands:
- command: kubectl logs --tail=100 daemonset/${DAEMONSET_NAME} --context ${CONTEXT}
    -n ${NAMESPACE}
  doc_links: '

    - [Kubernetes Logging Architecture](https://kubernetes.io/docs/concepts/cluster-administration/logging/){:target="_blank"}

    - [Kubectl Logs Command Documentation](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#logs){:target="_blank"}

    - [Kubectl Cheat Sheet](https://kubernetes.io/docs/reference/kubectl/cheatsheet/){:target="_blank"}'
  explanation: This command retrieves the last 100 lines of logs from a specific daemon
    set within a designated namespace and context in a Kubernetes cluster, allowing
    you to troubleshoot any issues or monitor its activity.
  multi_line_details: '```bash

    #!/bin/bash


    # This script retrieves logs for a specific daemonset in a Kubernetes cluster

    # Usage: ./get_daemonset_logs.sh <DAEMONSET_NAME> <CONTEXT> <NAMESPACE>


    # Extract command line arguments

    DAEMONSET_NAME=$1

    CONTEXT=$2

    NAMESPACE=$3


    # Retrieve logs for the specified daemonset

    kubectl logs --tail=100 daemonset/${DAEMONSET_NAME} --context ${CONTEXT} -n ${NAMESPACE}

    ```'
  name: get_daemonset_log_details_for_report
- command: kubectl get events --field-selector type=Warning --context ${CONTEXT} -n
    ${NAMESPACE} | grep -i "${DAEMONSET_NAME}" || true
  doc_links: '

    - [Kubernetes events API](https://kubernetes.io/docs/reference/using-api/api-concepts/#events){:target="_blank"}

    - [Filtering kubectl output](https://kubernetes.io/docs/reference/kubectl/cheatsheet/#output-formatting){:target="_blank"}

    - [DaemonSet in Kubernetes](https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/){:target="_blank"}'
  explanation: This command retrieves Kubernetes events with a type of Warning for
    a specific context and namespace, then filters the output to display only those
    related to a specific daemon set. The command also includes "|| true" to ensure
    that it returns a successful exit code even if no matching events are found.
  multi_line_details: "```bash\n# Get events from a specific context and namespace,\
    \ filter by type=Warning and search for a specific daemonset name\nkubectl get\
    \ events \\\n    --field-selector type=Warning \\\n    --context ${CONTEXT} \\\
    \n    -n ${NAMESPACE} | grep -i \"${DAEMONSET_NAME}\" || true\n```\n\nThis multi-line\
    \ command retrieves events from a specified Kubernetes context and namespace and\
    \ filters by type=Warning. It then uses the `grep` command to search for a specific\
    \ daemonset name case-insensitively. The `|| true` part at the end ensures that\
    \ the command return true regardless of whether `grep` finds a match or not."
  name: get_related_daemonset_events
- command: kubectl describe daemonset/${DAEMONSET_NAME} --context ${CONTEXT} -n ${NAMESPACE}
  doc_links: '

    - [Kubernetes DaemonSet Documentation](https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/){:target="_blank"}

    - [Kubectl Cheat Sheet](https://kubernetes.io/docs/reference/kubectl/cheatsheet/#kubectl-context-and-configuration){:target="_blank"}

    - [Understanding Kubernetes Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}'
  explanation: This command is used to provide detailed information about a specific
    daemon set in Kubernetes, including its current status and events, within a specific
    context (such as a different Kubernetes cluster) and namespace.
  multi_line_details: "```bash\n# Description: Display details of the specified daemonset\
    \ in the given namespace and context\n# Arguments:\n# - DAEMONSET_NAME: Name of\
    \ the daemonset to describe\n# - CONTEXT: Kubernetes context to use\n# - NAMESPACE:\
    \ Namespace of the daemonset\n# Usage example: describe_daemonset my-daemonset\
    \ my-context my-namespace\n\nkubectl describe daemonset/${DAEMONSET_NAME} \\\n\
    \  --context ${CONTEXT} \\\n  -n ${NAMESPACE}\n```"
  name: check_daemonset_replicas
