commands:
- command: kubectl logs --tail=100 daemonset/${DAEMONSET_NAME} --context ${CONTEXT}
    -n ${NAMESPACE}
  doc_links: '

    - [Kubernetes Logging Architecture](https://kubernetes.io/docs/concepts/cluster-administration/logging/){:target="_blank"}

    - [Kubectl Logs Command Documentation](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#logs){:target="_blank"}

    - [Kubectl Cheat Sheet](https://kubernetes.io/docs/reference/kubectl/cheatsheet/){:target="_blank"}'
  explanation: This command retrieves the last 100 lines of logs from a specific daemon
    set within a designated namespace and context in a Kubernetes cluster, allowing
    you to troubleshoot any issues or monitor its activity.
  multi_line_details: '```bash

    # Set the number of lines to display from the log file to 100

    TAIL=100

    # Access the logs for the specified daemonset using kubectl command

    kubectl logs --tail=$TAIL \

    # Specify the daemonset name

    daemonset/${DAEMONSET_NAME} \

    # Specify the context in which the command should be executed

    --context ${CONTEXT} \

    # Specify the namespace where the daemonset is located

    -n ${NAMESPACE}

    ```'
  name: get_daemonset_log_details_for_report
- command: kubectl get events --field-selector type=Warning --context ${CONTEXT} -n
    ${NAMESPACE} | grep -i "${DAEMONSET_NAME}" || true
  doc_links: '

    - [Kubernetes events API](https://kubernetes.io/docs/reference/using-api/api-concepts/#events){:target="_blank"}

    - [Filtering kubectl output](https://kubernetes.io/docs/reference/kubectl/cheatsheet/#output-formatting){:target="_blank"}

    - [DaemonSet in Kubernetes](https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/){:target="_blank"}'
  explanation: This command retrieves Kubernetes events with a type of Warning for
    a specific context and namespace, then filters the output to display only those
    related to a specific daemon set. The command also includes "|| true" to ensure
    that it returns a successful exit code even if no matching events are found.
  multi_line_details: '```bash

    # Set the context of the kubectl command with the specified CONTEXT

    # Set the namespace to be searched to the specified NAMESPACE

    # Get all events of type Warning in the specified namespace, using the specified
    context

    kubectl get events --field-selector type=Warning --context ${CONTEXT} -n ${NAMESPACE}
    \

    # Use grep to filter the events that contain the specified DAEMONSET_NAME (case
    insensitive)

    | grep -i "${DAEMONSET_NAME}" \

    # Ensure that the command does not fail even if no matches are found

    || true

    ```'
  name: get_related_daemonset_events
- command: kubectl describe daemonset/${DAEMONSET_NAME} --context ${CONTEXT} -n ${NAMESPACE}
  doc_links: '

    - [Kubernetes DaemonSet Documentation](https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/){:target="_blank"}

    - [Kubectl Cheat Sheet](https://kubernetes.io/docs/reference/kubectl/cheatsheet/#kubectl-context-and-configuration){:target="_blank"}

    - [Understanding Kubernetes Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}'
  explanation: This command is used to provide detailed information about a specific
    daemon set in Kubernetes, including its current status and events, within a specific
    context (such as a different Kubernetes cluster) and namespace.
  multi_line_details: '```bash

    # Set the context for the Kubernetes cluster

    kubectl config use-context ${CONTEXT}


    # Describe the daemon set with the specified name and in the specified namespace

    kubectl describe daemonset/${DAEMONSET_NAME} -n ${NAMESPACE}

    ```'
  name: check_daemonset_replicas
