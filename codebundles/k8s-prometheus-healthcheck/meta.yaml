commands:
- command: kubectl --context=${CONTEXT} -n ${PROM_NAMESPACE} logs $(kubectl --context=${CONTEXT}
    -n ${PROM_NAMESPACE} get pods -l app.kubernetes.io/name=prometheus -o=jsonpath='{.items[0].metadata.name}')
    -c prometheus | grep -iP "(load.*.fail)" || true
  doc_links: '

    Documentation links not available'
  explanation: Explanation not available
  multi_line_details: Multi-line script not available
  name: check_for_successful_rule_setup
- command: kubectl --context=${CONTEXT} -n ${PROM_NAMESPACE} logs $(kubectl --context=${CONTEXT}
    -n ${PROM_NAMESPACE} get pods -l app.kubernetes.io/name=prometheus -o=jsonpath='{.items[0].metadata.name}')
    -c prometheus | grep -iP "(load.*.fail)" || true
  doc_links: '

    Documentation links not available'
  explanation: Explanation not available
  multi_line_details: Multi-line script not available
  name: check_for_successful_rule_setup
- command: kubectl get clusterrole/kube-prometheus-stack-operator -ojson
  doc_links: '

    Documentation links not available'
  explanation: Explanation not available
  multi_line_details: Multi-line script not available
  name: verify_prometheus_rbac_can_access_servicemonitors
- command: kubectl get clusterrole/kube-prometheus-stack-operator -ojson
  doc_links: '

    Documentation links not available'
  explanation: Explanation not available
  multi_line_details: Multi-line script not available
  name: verify_prometheus_rbac_can_access_servicemonitors
- command: kubectl --context=${CONTEXT} -n ${PROM_NAMESPACE} logs $(kubectl --context=${CONTEXT}
    -n ${PROM_NAMESPACE} get pods -l app.kubernetes.io/name=prometheus -o=jsonpath='{.items[0].metadata.name}')
    -c prometheus | grep -iP "(scrape.*.error)" || true
  doc_links: '

    Documentation links not available'
  explanation: Explanation not available
  multi_line_details: Multi-line script not available
  name: identify_endpoint_scraping_errors
- command: kubectl --context=${CONTEXT} -n ${PROM_NAMESPACE} logs $(kubectl --context=${CONTEXT}
    -n ${PROM_NAMESPACE} get pods -l app.kubernetes.io/name=prometheus -o=jsonpath='{.items[0].metadata.name}')
    -c prometheus | grep -iP "(scrape.*.error)" || true
  doc_links: '

    Documentation links not available'
  explanation: Explanation not available
  multi_line_details: Multi-line script not available
  name: identify_endpoint_scraping_errors
- command: kubectl --context=${CONTEXT} -n ${PROM_NAMESPACE} exec $(kubectl --context=${CONTEXT}
    -n ${PROM_NAMESPACE} get pods -l app.kubernetes.io/name=prometheus -o=jsonpath='{.items[0].metadata.name}')
    --container prometheus -- wget -qO- -S 127.0.0.1:9090/-/healthy 2>&1 | grep "HTTP/"
    | awk '{print $2}'
  doc_links: '

    Documentation links not available'
  explanation: Explanation not available
  multi_line_details: Multi-line script not available
  name: check_prometheus_api_healthy
- command: kubectl --context=${CONTEXT} -n ${PROM_NAMESPACE} exec $(kubectl --context=${CONTEXT}
    -n ${PROM_NAMESPACE} get pods -l app.kubernetes.io/name=prometheus -o=jsonpath='{.items[0].metadata.name}')
    --container prometheus -- wget -qO- -S 127.0.0.1:9090/-/healthy 2>&1 | grep "HTTP/"
    | awk '{print $2}'
  doc_links: '

    Documentation links not available'
  explanation: Explanation not available
  multi_line_details: Multi-line script not available
  name: check_prometheus_api_healthy
