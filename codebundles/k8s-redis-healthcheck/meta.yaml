commands:
- command: kubectl exec deployment/${DEPLOYMENT_NAME} --context=${CONTEXT} -n ${NAMESPACE}
    -- redis-cli PING
  doc_links: '

    - [Redis Documentation](https://redis.io/documentation){:target="_blank"}

    - [Kubernetes Documentation](https://kubernetes.io/docs/home/){:target="_blank"}

    - [Docker Contexts](https://docs.docker.com/engine/reference/commandline/context/){:target="_blank"}

    - [Kubernetes Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}

    - [Redis PING Command](https://redis.io/commands/ping){:target="_blank"}'
  explanation: This command allows you to execute a command within a Redis container
    in the specified Kubernetes deployment, using the given context and namespace.
    The specific command being executed in this case is the "PING" command, which
    checks if the Redis server is running.
  multi_line_details: "```bash\n# Set the Kubernetes context and namespace to execute\
    \ a command on a specific deployment\nkubectl exec \\\n    deployment/${DEPLOYMENT_NAME}\
    \ \\  # Name of the deployment to execute the command on\n    --context=${CONTEXT}\
    \ \\            # Context to use for accessing the Kubernetes cluster\n    -n\
    \ ${NAMESPACE} \\                 # Namespace in which the deployment is located\n\
    \    -- redis-cli PING                 # Command to execute with redis-cli on\
    \ the specified deployment\n```"
  name: ping_deployment_name_redis_workload
- command: kubectl exec deployment/${DEPLOYMENT_NAME} --context=${CONTEXT} -n ${NAMESPACE}
    -- redis-cli SET ${REDIS_HEALTHCHECK_KEY} 0
  doc_links: '

    - [Kubernetes Deployments](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/){:target="_blank"}

    - [Redis SET Command](https://redis.io/commands/set){:target="_blank"}

    - [Kubernetes Contexts](https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/){:target="_blank"}

    - [Kubernetes Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}'
  explanation: This command runs a command in a pod belonging to a specific deployment
    in a Kubernetes cluster, setting a key in a Redis database to 0 for health checking
    purposes. The variables DEPLOYMENT_NAME, CONTEXT, and NAMESPACE need to be replaced
    with specific values.
  multi_line_details: "```bash\n# This command is used to set a redis healthcheck\
    \ key to 0 using kubectl exec\n\n# Set the deployment name, context, and namespace\
    \ as environmental variables\nDEPLOYMENT_NAME=\"your_deployment_name\"\nCONTEXT=\"\
    your_context\"\nNAMESPACE=\"your_namespace\"\n\n# Use kubectl exec to run the\
    \ redis-cli SET command with the specified key and value in the specified deployment\n\
    kubectl exec deployment/${DEPLOYMENT_NAME} \\\n  --context=${CONTEXT} \\\n  -n\
    \ ${NAMESPACE} \\\n  -- redis-cli SET ${REDIS_HEALTHCHECK_KEY} 0\n```"
  name: verify_deployment_name_redis_read_write_operation
- command: kubectl exec deployment/${DEPLOYMENT_NAME} --context=${CONTEXT} -n ${NAMESPACE}
    -- redis-cli INCR ${REDIS_HEALTHCHECK_KEY}
  doc_links: '

    - [redis-cli INCR command documentation](https://redis.io/commands/incr){:target="_blank"}

    - [Kubernetes kubectl execute command documentation](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#execute){:target="_blank"}

    - [Kubernetes namespaces documentation](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}'
  explanation: This command allows you to execute the redis-cli INCR command within
    a specific deployment, context, and namespace, in order to increment the value
    of a key used for health checking in Redis.
  multi_line_details: "```bash\n# The following command is used to increment the value\
    \ of a key in a Redis database using the redis-cli tool\n# It is executed within\
    \ a specific deployment, context, and namespace\n\nkubectl exec deployment/${DEPLOYMENT_NAME}\
    \ \\\n  --context=${CONTEXT} \\\n  -n ${NAMESPACE} \\\n  -- redis-cli INCR ${REDIS_HEALTHCHECK_KEY}\n\
    ```"
  name: verify_deployment_name_redis_read_write_operation
- command: kubectl exec deployment/${DEPLOYMENT_NAME} --context=${CONTEXT} -n ${NAMESPACE}
    -- redis-cli GET ${REDIS_HEALTHCHECK_KEY}
  doc_links: '

    - [Redis Command Line Interface (CLI) Documentation](https://redis.io/topics/rediscli){:target="_blank"}

    - [Kubernetes kubectl Command Documentation](https://kubernetes.io/docs/reference/kubectl/overview/){:target="_blank"}

    - [Kubernetes Namespaces Documentation](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}'
  explanation: This command allows you to execute a Redis CLI command to retrieve
    the value of a specified key in a specific deployment and namespace within your
    Kubernetes cluster.
  multi_line_details: "```bash\n# This command is used to execute redis-cli in a specific\
    \ Kubernetes deployment and namespace and get the value of a specific key\n\n\
    kubectl exec deployment/${DEPLOYMENT_NAME} \\ # Execute a command within a specific\
    \ Kubernetes deployment\n  --context=${CONTEXT} \\ # Use a specific context\n\
    \  -n ${NAMESPACE} \\ # Specify the namespace\n  -- redis-cli GET ${REDIS_HEALTHCHECK_KEY}\
    \ # Use redis-cli to get the value of a specific key\n```"
  name: verify_deployment_name_redis_read_write_operation
