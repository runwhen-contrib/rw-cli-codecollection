commands:
- command: kubectl logs --tail=100 daemonset.apps/vault-csi-provider --context ${CONTEXT}
    -n ${NAMESPACE}
  doc_links: '

    - [Kubernetes Contexts](https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/){:target="_blank"}

    - [Kubernetes Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}

    - [Vault CSI Provider](https://www.vaultproject.io/docs/platform/k8s/csi){:target="_blank"}

    - [Retrieving Logs in Kubernetes](https://kubernetes.io/docs/reference/kubectl/cheatsheet/#interacting-with-running-pods){:target="_blank"}'
  explanation: This command retrieves the last 100 lines of logs for the Vault CSI
    Provider daemon set in a specific Kubernetes context and namespace.
  multi_line_details: "# This multi-line command gets the logs of a daemonset with\
    \ tail of 100 lines\n# and specifies the context and namespace\n\nkubectl logs\
    \ \\\n  --tail=100 \\\n  daemonset.apps/vault-csi-provider \\\n  --context ${CONTEXT}\
    \ \\\n  -n ${NAMESPACE}"
  name: fetch_vault_csi_driver_logs
- command: kubectl get events --field-selector type=Warning --context ${CONTEXT} -n
    ${NAMESPACE} | grep -i "vault-csi-provider" || true
  doc_links: '

    - [Kubernetes Event API documentation](https://kubernetes.io/docs/reference/using-api/api-concepts/#event-api){:target="_blank"}

    - [Kubectl command line reference](https://kubernetes.io/docs/reference/kubectl/overview/){:target="_blank"}

    - [Understanding Kubernetes contexts and namespaces](https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/){:target="_blank"}'
  explanation: This command is used to get event logs from a Kubernetes cluster, specifically
    filtering for warnings related to the "vault-csi-provider" component in the specified
    context and namespace. If no matching events are found, it will still return a
    successful exit code.
  multi_line_details: "# This command retrieves the events from a specific context\
    \ and namespace, filtering by type=Warning and then grepping for \"vault-csi-provider\"\
    \nkubectl get events \\\n  --field-selector type=Warning \\\n  --context ${CONTEXT}\
    \ \\\n  -n ${NAMESPACE} \\\n  | grep -i \"vault-csi-provider\" || true"
  name: get_vault_csi_driver_warning_events
- command: kubectl describe daemonset.apps/vault-csi-provider --context ${CONTEXT}
    -n ${NAMESPACE}
  doc_links: '

    - [kubectl Cheat Sheet](https://kubernetes.io/docs/reference/kubectl/cheatsheet/){:target="_blank"}'
  explanation: This command uses "kubectl" to provide detailed information about a
    specific daemonset called "vault-csi-provider" in a particular Kubernetes context
    and namespace. It is helpful for troubleshooting and getting an overview of the
    configuration and status of the daemonset.
  multi_line_details: '# Set the context and namespace for the kubectl command

    CONTEXT="your_context_name"

    NAMESPACE="your_namespace"


    # Describe the daemonset using the specified context and namespace

    kubectl describe daemonset.apps/vault-csi-provider --context ${CONTEXT} -n ${NAMESPACE}'
  name: check_vault_csi_driver_replicas
- command: kubectl logs --tail=100 statefulset.apps/vault --context ${CONTEXT} -n
    ${NAMESPACE}
  doc_links: '

    - [Kubernetes StatefulSets overview](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/){:target="_blank"}

    - [kubectl logs command documentation](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#logs){:target="_blank"}

    - [Kubernetes contexts](https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/#context){:target="_blank"}'
  explanation: This command retrieves the last 100 lines of logs from a specific statefulset
    called 'vault' in a Kubernetes cluster, using the specified context and namespace.
  multi_line_details: '# Set the context and namespace for the kubectl command

    CONTEXT="your-context-name"

    NAMESPACE="your-namespace"


    # Use kubectl to retrieve the logs for a statefulset named ''vault'' with tailing
    100 lines

    kubectl logs --tail=100 statefulset.apps/vault --context ${CONTEXT} -n ${NAMESPACE}'
  name: fetch_vault_logs
- command: kubectl get events --field-selector type=Warning --context ${CONTEXT} -n
    ${NAMESPACE} | grep -i "vault" || true
  doc_links: '

    - [Kubernetes kubectl Cheat Sheet](https://kubernetes.io/docs/reference/kubectl/cheatsheet/){:target="_blank"}

    - [Kubernetes Concepts - Pods](https://kubernetes.io/docs/concepts/workloads/pods/){:target="_blank"}

    - [Kubernetes Contexts](https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/){:target="_blank"}

    - [Kubernetes Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}'
  explanation: This command is used to retrieve events related to the "Warning" type
    from a specific Kubernetes context and namespace, and then filters the output
    for the term "vault". If there are no matching events, it returns a successful
    status.
  multi_line_details: '# Setting the context, namespace and fetching events with type=Warning

    # Filtering for "vault" and ignoring case sensitivity using grep

    kubectl get events \

    --field-selector type=Warning \

    --context ${CONTEXT} \

    -n ${NAMESPACE} \

    | grep -i "vault" || true'
  name: get_related_vault_events
- command: kubectl get statefulset.apps/vault --context=${CONTEXT} -n ${NAMESPACE}
    -o yaml
  doc_links: '

    - [StatefulSets](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/){:target="_blank"}

    - [Kubernetes Contexts](https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/){:target="_blank"}

    - [Kubernetes Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/){:target="_blank"}'
  explanation: This command retrieves the configuration of the stateful set named
    "vault" within a specific Kubernetes context and namespace, and outputs it in
    YAML format.
  multi_line_details: "# This is a multi-line bash command\n# It retrieves the statefulset\
    \ named \"vault\" in a specific context and namespace and outputs it as YAML\n\
    kubectl get statefulset.apps/vault \\\n  --context=${CONTEXT} \\\n  -n ${NAMESPACE}\
    \ \\\n  -o yaml"
  name: fetch_vault_statefulset_manifest_details
- command: kubectl get daemonset.apps/vault-csi-provider --context=${CONTEXT} -n ${NAMESPACE}
    -o yaml
  doc_links: '

    - [kubectl command reference](https://kubernetes.io/docs/reference/kubectl/overview/){:target="_blank"}

    - [DaemonSet in Kubernetes](https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/){:target="_blank"}

    - [YAML format documentation](https://yaml.org/){:target="_blank"}'
  explanation: This command uses kubectl to retrieve information about the DaemonSet
    called "vault-csi-provider" in the specified namespace and context, and outputs
    the details in YAML format.
  multi_line_details: "# Retrieve the daemonset information for vault-csi-provider\n\
    # set the kubernetes context and namespace\n\nkubectl get daemonset.apps/vault-csi-provider\
    \ \\\n  --context=${CONTEXT} \\\n  -n ${NAMESPACE} \\\n  -o yaml"
  name: fetch_vault_daemonset_manifest_details
- command: curl ${VAULT_URL}
  doc_links: '

    - [curl Documentation](https://curl.se/docs/){:target="_blank"}

    - [HTTP Request Methods](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods){:target="_blank"}'
  explanation: This command is using the 'curl' program to make a request to a specific
    URL, represented by the variable ${VAULT_URL}. It's commonly used for interacting
    with web services and APIs.
  multi_line_details: '# Define the URL for Vault

    VAULT_URL="https://example.com/vault"


    # Use curl to perform a GET request on the specified Vault URL

    curl ${VAULT_URL}'
  name: verify_vault_availability
- command: kubectl get statefulset.apps/vault --context=${CONTEXT} -n ${NAMESPACE}
    -o json
  doc_links: '

    - [Kubectl Cheat Sheet](https://kubernetes.io/docs/reference/kubectl/cheatsheet/){:target="_blank"}

    - [Kubectl Reference Documentation](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#-kubectl-get){:target="_blank"}'
  explanation: This command retrieves the statefulset named "vault" from a specific
    Kubernetes context and namespace, displaying the results in json format.
  multi_line_details: '# This is a command to get the statefulset vault in json format
    from a specific context and namespace

    # Assign the context and namespace to variables for easier reading and modification

    CONTEXT="your_context"

    NAMESPACE="your_namespace"


    # Use kubectl command to get statefulset vault in json format

    kubectl get statefulset.apps/vault --context=${CONTEXT} -n ${NAMESPACE} -o json'
  name: check_vault_statefulset_replicas
